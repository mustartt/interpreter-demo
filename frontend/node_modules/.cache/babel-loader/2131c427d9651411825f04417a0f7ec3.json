{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\henry\\\\source\\\\interpreter-demo\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/components/prism-markup';\nimport 'prismjs/components/prism-python';\nimport styles from './App.css'; // Import Components\n\nimport OutputConsole from './components/OutputConsole';\nimport Header from './components/Header';\nimport REPL from './components/REPL';\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = \"http://localhost:5001\";\nconst tempcode = `# fib(n) recursively computes the n-th fibonacci number\n# fib: Nat -> Nat\nbind fib = lambda({n} -> \n  if(<=(n 1)\n    n\n    +(fib(-(n 1)) \n      fib(-(n 2)))));\n\n# function evaluation\nfib(0);\nfib(5);\nfib(10);`;\nconst tempout = `Welcome to The 位 Interpreter [version 0.1].\\n位 `;\n\nfunction highcust(program) {\n  var temp = highlight(program, languages.python);\n  temp = temp.replace('bind', '<span class=\"token keyword\">bind</span>');\n  temp = temp.replace('local', '<span class=\"token keyword\">local</span>');\n  temp = temp.replace('load', '<span class=\"token keyword\">load</span>');\n  temp = temp.replace('位', '<span class=\"token keyword\">位</span>');\n  return temp;\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // console.log(highlight(tempcode))\n\n    this.state = {\n      code: tempcode,\n      output: tempout,\n      log: '',\n      panel: 'repl',\n      // 'repl' or 'output'\n      response: ''\n    };\n    this.execute = this.execute.bind(this);\n    this.reset = this.reset.bind(this);\n    this.sendCommand = this.sendCommand.bind(this); // setup socket\n\n    this.socket = socketIOClient(ENDPOINT); // setup buttons\n\n    this.changeToOutput = this.changeToOutput.bind(this);\n    this.changeToREPL = this.changeToREPL.bind(this);\n  }\n\n  componentDidMount() {\n    console.log('App mounted. Creating Socket'); // setup message handler\n\n    this.socket.on(\"msg_repl\", data => {\n      console.log(data); // update state\n\n      this.setState({\n        response: this.state.response + '\\n' + data\n      });\n    });\n  }\n\n  sendCommand(command) {\n    if (command === \"clear\") {\n      this.setState({\n        response: '> '\n      });\n      return;\n    }\n\n    this.setState({\n      response: this.state.response + ' ' + command\n    });\n    this.socket.emit('msg_client', command);\n  }\n\n  execute() {\n    // send POST request\n    fetch('http://localhost:5000/api', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        code: this.state.code\n      })\n    }).then(res => res.json()).then(json => {\n      console.log(\"Program Output: \" + (json.err ? \"Failure\" : \"Success\"));\n      console.log(json.output);\n      this.setState({\n        code: this.state.code,\n        output: tempout + 'interperter input.lang\\n' + json.output\n      });\n    });\n  }\n\n  reset() {\n    this.setState({\n      code: tempcode,\n      output: tempout\n    });\n  }\n\n  changeToOutput() {\n    this.setState({\n      panel: 'output'\n    });\n  }\n\n  changeToREPL() {\n    this.setState({\n      panel: 'repl'\n    });\n  }\n\n  render() {\n    //console.log(highlight(this.state.code, languages.js));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container full-height\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        execute: this.execute,\n        reset: this.reset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row fluid-height\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"code-area dropshadow\",\n            children: /*#__PURE__*/_jsxDEV(Editor, {\n              className: \"code-editor\",\n              value: this.state.code,\n              onValueChange: code => this.setState({\n                code\n              }),\n              highlight: code => highcust(code),\n              padding: 10,\n              style: {\n                fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n                fontSize: 12\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"console-area dropshadow\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tab-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"tab dropshadow \" + (this.state.panel === 'repl' ? 'active' : ''),\n                onClick: this.changeToREPL,\n                children: \"REPL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"tab dropshadow \" + (this.state.panel === 'repl' ? '' : 'active'),\n                onClick: this.changeToOutput,\n                children: \"Output\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), this.state.panel === 'repl' ? /*#__PURE__*/_jsxDEV(REPL, {\n              sendHandler: this.sendCommand,\n              log: this.state.response\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(OutputConsole, {\n              output: this.state.output\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/henry/source/interpreter-demo/frontend/src/App.js"],"names":["React","Editor","highlight","languages","styles","OutputConsole","Header","REPL","socketIOClient","ENDPOINT","tempcode","tempout","highcust","program","temp","python","replace","App","Component","constructor","props","state","code","output","log","panel","response","execute","bind","reset","sendCommand","socket","changeToOutput","changeToREPL","componentDidMount","console","on","data","setState","command","emit","fetch","method","headers","body","JSON","stringify","then","res","json","err","render","fontFamily","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Editor from 'react-simple-code-editor';\nimport {highlight, languages} from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/components/prism-markup';\nimport 'prismjs/components/prism-python'\n\nimport styles from './App.css'\n\n// Import Components\nimport OutputConsole from './components/OutputConsole'\nimport Header from './components/Header'\nimport REPL from './components/REPL'\n\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = \"http://localhost:5001\";\n\n\n\nconst tempcode = \n`# fib(n) recursively computes the n-th fibonacci number\n# fib: Nat -> Nat\nbind fib = lambda({n} -> \n  if(<=(n 1)\n    n\n    +(fib(-(n 1)) \n      fib(-(n 2)))));\n\n# function evaluation\nfib(0);\nfib(5);\nfib(10);`;\n\nconst tempout = \n`Welcome to The 位 Interpreter [version 0.1].\\n位 `\n\n\nfunction highcust(program) {\n  var temp = highlight(program, languages.python)\n  temp = temp.replace('bind', '<span class=\"token keyword\">bind</span>')\n  temp = temp.replace('local', '<span class=\"token keyword\">local</span>')\n  temp = temp.replace('load', '<span class=\"token keyword\">load</span>')\n  temp = temp.replace('位', '<span class=\"token keyword\">位</span>')\n  return temp\n}\n\nclass App extends React.Component {\n\n  state = { \n    code: tempcode, \n    output: tempout,\n    log: '',\n    panel: 'repl', // 'repl' or 'output'\n    response: ''\n    };\n\n  constructor(props) {\n    super(props)\n\n    // console.log(highlight(tempcode))\n\n    this.execute = this.execute.bind(this);\n    this.reset = this.reset.bind(this); \n    this.sendCommand = this.sendCommand.bind(this);\n\n    // setup socket\n    this.socket = socketIOClient(ENDPOINT);\n\n    // setup buttons\n    this.changeToOutput = this.changeToOutput.bind(this)\n    this.changeToREPL = this.changeToREPL.bind(this) \n  }\n\n  componentDidMount() {\n    console.log('App mounted. Creating Socket')\n    // setup message handler\n    this.socket.on(\"msg_repl\", data => {\n      console.log(data)\n      // update state\n\n      this.setState({response: this.state.response + '\\n' + data})\n    });\n\n  }\n\n  sendCommand(command) {\n\n    if (command === \"clear\") {\n      this.setState({response: '> '})\n      return\n    }\n\n    this.setState({response: this.state.response + ' ' + command})\n    this.socket.emit('msg_client', command)\n  }\n  \n  execute() {\n    // send POST request\n    fetch('http://localhost:5000/api', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        code: this.state.code\n      })\n    })\n    .then((res) => res.json())\n    .then((json) => {\n      console.log(\"Program Output: \" + (json.err ? \"Failure\" : \"Success\"))\n      console.log(json.output)\n      this.setState({ code: this.state.code, \n        output: tempout + 'interperter input.lang\\n' + json.output })\n    })\n  }\n\n  reset() {\n    this.setState({ code: tempcode, output: tempout })\n  }\n\n  changeToOutput() {\n    this.setState({ panel: 'output' })\n  } \n\n  changeToREPL() {\n    this.setState({ panel: 'repl' })\n  }\n\n  render() {\n    //console.log(highlight(this.state.code, languages.js));\n    return (\n      <div className=\"container full-height\">\n\n        <Header execute={this.execute} reset={this.reset} />\n\n        <div className=\"row fluid-height\">\n          <div className=\"col-lg-6\">\n            <div className=\"code-area dropshadow\">\n              <Editor \n                className=\"code-editor\"\n                value={this.state.code}\n                onValueChange={code => this.setState({ code })}\n                highlight={code => highcust(code)}\n                padding={10}\n                style={{\n                  fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n                  fontSize: 12,\n                }}\n              />\n            </div>\n          </div>\n\n          <div className=\"col-lg-6\">\n            <div class=\"console-area dropshadow\">\n              <div className=\"tab-container\">\n                <button \n                  className={\"tab dropshadow \" + ((this.state.panel === 'repl') ? 'active' : '')}\n                  onClick={this.changeToREPL}\n                  >REPL</button>\n                <button \n                  className={\"tab dropshadow \" + ((this.state.panel === 'repl') ? '' : 'active')}\n                  onClick={this.changeToOutput}\n                  >Output</button>\n              </div>\n              \n              { (this.state.panel === 'repl') ? \n                <REPL sendHandler={this.sendCommand} log={this.state.response}/> :\n                <OutputConsole output={this.state.output}/> }\n\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}