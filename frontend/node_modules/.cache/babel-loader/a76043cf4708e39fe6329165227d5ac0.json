{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\henry\\\\source\\\\interpreter-demo\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/components/prism-markup';\nimport styles from './App.css'; // Import Components\n\nimport OutputConsole from './components/OutputConsole';\nimport Header from './components/Header';\nconst tempcode = `function add(a, b) {\n  return a + b;\n}`;\nconst tempout = 'Welcome to <Lang> Interpreter v0.1.';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: tempcode,\n      output: tempout\n    };\n    this.execute = this.execute.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  execute() {\n    // send POST request\n    fetch('https://httpbin.org/post', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        code: this.state.code\n      })\n    }).then();\n    this.setState({\n      code: this.state.code,\n      output: \"out\"\n    });\n  }\n\n  reset() {\n    this.setState({\n      code: tempcode,\n      output: this.state.output\n    });\n  }\n\n  render() {\n    //console.log(highlight(this.state.code, languages.js));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        execute: this.execute,\n        reset: this.reset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Editor, {\n          className: \"col-sm-6 code-editor\",\n          value: this.state.code,\n          onValueChange: code => this.setState({\n            code\n          }),\n          highlight: code => highlight(code, languages.js),\n          padding: 10,\n          style: {\n            fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n            fontSize: 12\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(OutputConsole, {\n          output: this.state.output\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/henry/source/interpreter-demo/frontend/src/App.js"],"names":["React","Editor","highlight","languages","styles","OutputConsole","Header","tempcode","tempout","App","Component","constructor","props","state","code","output","execute","bind","reset","fetch","method","headers","body","JSON","stringify","then","setState","render","js","fontFamily","fontSize"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,SAAR,EAAmBC,SAAnB,QAAmC,+BAAnC;AACA,OAAO,gCAAP;AACA,OAAO,qCAAP;AACA,OAAO,iCAAP;AAEA,OAAOC,MAAP,MAAmB,WAAnB,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAGA,MAAMC,QAAQ,GAAI;AAClB;AACA,EAFA;AAIA,MAAMC,OAAO,GAAG,qCAAhB;;AAGA,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAIhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAFnBC,KAEmB,GAFX;AAAEC,MAAAA,IAAI,EAAEP,QAAR;AAAkBQ,MAAAA,MAAM,EAAEP;AAA1B,KAEW;AAGjB,SAAKQ,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWD,IAAX,CAAgB,IAAhB,CAAb;AACD;;AAEDD,EAAAA,OAAO,GAAG;AACR;AACAG,IAAAA,KAAK,CAAC,0BAAD,EAA6B;AAChCC,MAAAA,MAAM,EAAE,MADwB;AAEhCC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT,OAFuB;AAMhCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBV,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC;AADE,OAAf;AAN0B,KAA7B,CAAL,CASGW,IATH;AAYA,SAAKC,QAAL,CAAc;AAAEZ,MAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAAnB;AAAyBC,MAAAA,MAAM,EAAE;AAAjC,KAAd;AACD;;AAEDG,EAAAA,KAAK,GAAG;AAEN,SAAKQ,QAAL,CAAc;AAAEZ,MAAAA,IAAI,EAAEP,QAAR;AAAkBQ,MAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE;AAArC,KAAd;AACD;;AAEDY,EAAAA,MAAM,GAAG;AACP;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BAEE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKX,OAAtB;AAA+B,QAAA,KAAK,EAAE,KAAKE;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI,QAAC,MAAD;AACE,UAAA,SAAS,EAAC,sBADZ;AAEE,UAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,IAFpB;AAGE,UAAA,aAAa,EAAEA,IAAI,IAAI,KAAKY,QAAL,CAAc;AAAEZ,YAAAA;AAAF,WAAd,CAHzB;AAIE,UAAA,SAAS,EAAEA,IAAI,IAAIZ,SAAS,CAACY,IAAD,EAAOX,SAAS,CAACyB,EAAjB,CAJ9B;AAKE,UAAA,OAAO,EAAE,EALX;AAME,UAAA,KAAK,EAAE;AACLC,YAAAA,UAAU,EAAE,qCADP;AAELC,YAAAA,QAAQ,EAAE;AAFL;AANT;AAAA;AAAA;AAAA;AAAA,gBADJ,eAaI,QAAC,aAAD;AAAe,UAAA,MAAM,EAAE,KAAKjB,KAAL,CAAWE;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AA1D+B;;AA6DlC,eAAeN,GAAf","sourcesContent":["import React from 'react';\nimport Editor from 'react-simple-code-editor';\nimport {highlight, languages} from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/components/prism-markup';\n\nimport styles from './App.css'\n\n// Import Components\nimport OutputConsole from './components/OutputConsole'\nimport Header from './components/Header'\n\n\nconst tempcode = `function add(a, b) {\n  return a + b;\n}`;\n\nconst tempout = 'Welcome to <Lang> Interpreter v0.1.'\n\n\nclass App extends React.Component {\n\n  state = { code: tempcode, output: tempout };\n  \n  constructor(props) {\n    super(props)\n\n    this.execute = this.execute.bind(this);\n    this.reset = this.reset.bind(this); \n  }\n\n  execute() {\n    // send POST request\n    fetch('https://httpbin.org/post', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        code: this.state.code\n      })\n    }).then()\n\n\n    this.setState({ code: this.state.code, output: \"out\" })\n  }\n\n  reset() {\n    \n    this.setState({ code: tempcode, output: this.state.output })\n  }\n\n  render() {\n    //console.log(highlight(this.state.code, languages.js));\n    return (\n      <div className=\"container\">\n\n        <Header execute={this.execute} reset={this.reset} />\n\n        <div className=\"row\">\n            <Editor \n              className=\"col-sm-6 code-editor\"\n              value={this.state.code}\n              onValueChange={code => this.setState({ code })}\n              highlight={code => highlight(code, languages.js)}\n              padding={10}\n              style={{\n                fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n                fontSize: 12,\n              }}\n            />\n\n            <OutputConsole output={this.state.output}/>\n            \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}