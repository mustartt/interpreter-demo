{"version":3,"sources":["components/OutputConsole.js","components/Header.js","components/REPL.js","App.js","index.js"],"names":["OutputConsole","className","this","props","output","React","Component","Header","onClick","execute","src","width","height","reset","href","REPL","event","keyCode","which","text","target","value","sendHandler","log","id","type","onKeyPress","enterPressed","bind","autocomplete","tempcode","tempout","App","state","code","panel","response","sendCommand","socket","socketIOClient","changeToOutput","changeToREPL","console","on","data","setState","command","emit","fetch","method","headers","body","JSON","stringify","then","res","json","err","onValueChange","highlight","program","temp","languages","python","replace","highcust","padding","style","fontFamily","fontSize","class","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cde204ac.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './OutputConsole.css'\r\n\r\nclass OutputConsole extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"console-output\">\r\n\t\t\t\t<div className=\"console-text\">\r\n\t\t\t\t\t{this.props.output}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default OutputConsole","import React from 'react';\r\n\r\nimport styles from './Header.css'\r\n\r\n// λ\r\n\r\nclass Header extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"header-area\">\r\n\t\t\t\t<h1>The <span className=\"sf\">λ</span> Interpreter</h1>\r\n\r\n\t\t\t\t<div className=\"header-desc\">A Functional Programming Language \r\n\t\t\t\t\tInterpreter written in Python. \r\n\t\t\t\t\tThe fundamental idea of this language is to express the functional \r\n\t\t\t\t\tnature of the language, as every function is\r\n\t\t\t\t\ta <span className=\"sf\">λ</span> expression bound to an identifier.</div>\r\n\r\n\t\t\t\t<br></br>\r\n\r\n\t\t\t\t<button className=\"button run\" onClick={this.props.execute}>\r\n\t\t\t\t\t<img src=\"./assets/caret-right-fill.svg\" width=\"20\" height=\"20\"></img>\r\n\t\t\t\t\t<span> Run</span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"button res\" onClick={this.props.reset}>\r\n\t\t\t\t\t<img src=\"./assets/arrow-clockwise.svg\" width=\"20\" height=\"20\"></img>\r\n\t\t\t\t\t<span> Reset</span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"button github\">\r\n\t\t\t\t\t<img src=\"./assets/github.svg\" width=\"20\" height=\"20\"></img>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t<a href=\"https://github.com/mustartt/functional-interpreter\"> Github</a>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport './REPL.css'\r\n\r\nclass REPL extends React.Component {\r\n\r\n\tenterPressed(event) {\r\n\t\tvar code = event.keyCode || event.which;\r\n\t\t// check for enter key\r\n\t\tif (code === 13) {\r\n\t\t\tvar text = event.target.value\r\n\t\t\t// TODO: Preprocess and check for enter on a new line\r\n\r\n\t\t\t// send off to App.js for processing\r\n\t\t\tthis.props.sendHandler(text)\r\n\t\t\t// reset input field\r\n\t\t\tevent.target.value = \"\"\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"repl-pane\">\r\n\t\t\t\t{this.props.log}\r\n\t\t\t\t<input id='repl-input'\r\n\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\tonKeyPress={this.enterPressed.bind(this)}\r\n\t\t\t\t\tautocomplete=\"off\"></input>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default REPL;","import React from 'react';\nimport Editor from 'react-simple-code-editor';\nimport {highlight, languages} from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/components/prism-markup';\nimport 'prismjs/components/prism-python'\n\nimport styles from './App.css'\n\n// Import Components\nimport OutputConsole from './components/OutputConsole'\nimport Header from './components/Header'\nimport REPL from './components/REPL'\n\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = \"https://interpreter-demo.herokuapp.com/\";\n\nconst tempcode = \n`# fib(n) recursively computes the n-th fibonacci number\n# fib: Nat -> Nat\nbind fib = lambda({n} -> \n  if(<=(n 1)\n    n\n    +(fib(-(n 1)) \n      fib(-(n 2)))));\n\n# function evaluation\nfib(0);\nfib(5);\nfib(10);`;\n\nconst tempout = \n`Welcome to The λ Interpreter [version 0.1].\\nλ `\n\n\nfunction highcust(program) {\n  var temp = highlight(program, languages.python)\n  temp = temp.replace('bind', '<span class=\"token keyword\">bind</span>')\n  temp = temp.replace('local', '<span class=\"token keyword\">local</span>')\n  temp = temp.replace('load', '<span class=\"token keyword\">load</span>')\n  temp = temp.replace('λ', '<span class=\"token keyword\">λ</span>')\n  return temp\n}\n\nclass App extends React.Component {\n\n  state = { \n    code: tempcode, \n    output: tempout,\n    log: '',\n    panel: 'repl', // 'repl' or 'output'\n    response: ''\n    };\n\n  constructor(props) {\n    super(props)\n\n    // console.log(highlight(tempcode))\n\n    this.execute = this.execute.bind(this);\n    this.reset = this.reset.bind(this); \n    this.sendCommand = this.sendCommand.bind(this);\n\n    // setup socket\n    this.socket = socketIOClient(ENDPOINT);\n\n    // setup buttons\n    this.changeToOutput = this.changeToOutput.bind(this)\n    this.changeToREPL = this.changeToREPL.bind(this) \n  }\n\n  componentDidMount() {\n    console.log('App mounted. Creating Socket')\n    // setup message handler\n    this.socket.on(\"msg_repl\", data => {\n      console.log(data)\n      // update state\n\n      this.setState({response: this.state.response + '\\n' + data})\n    });\n  }\n\n  sendCommand(command) {\n    if (command === \"clear\") {\n      this.setState({response: '> '})\n      return\n    }\n\n    this.setState({response: this.state.response + command})\n    this.socket.emit('msg_client', command)\n  }\n  \n  execute() {\n    // swtich view to output\n    this.changeToOutput()\n\n    // send POST request\n    fetch('https://interpreter-demo.herokuapp.com/api', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        code: this.state.code\n      })\n    })\n    .then((res) => res.json())\n    .then((json) => {\n      console.log(\"Program Output: \" + (json.err ? \"Failure\" : \"Success\"))\n      console.log(json.output)\n      this.setState({ code: this.state.code, \n        output: tempout + 'interperter input.lang\\n' + json.output })\n    })\n  }\n\n  reset() {\n    this.setState({ code: tempcode, output: tempout })\n  }\n\n  changeToOutput() {\n    this.setState({ panel: 'output' })\n  } \n\n  changeToREPL() {\n    this.setState({ panel: 'repl' })\n  }\n\n  render() {\n    //console.log(highlight(this.state.code, languages.js));\n    return (\n      <div className=\"container full-height\">\n\n        <Header execute={this.execute} reset={this.reset} />\n\n        <div className=\"row fluid-height\">\n          <div className=\"col-lg-6\">\n            <div className=\"code-area dropshadow\">\n              <Editor \n                className=\"code-editor\"\n                value={this.state.code}\n                onValueChange={code => this.setState({ code })}\n                highlight={code => highcust(code)}\n                padding={10}\n                style={{\n                  fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n                  fontSize: 12,\n                }}\n              />\n            </div>\n          </div>\n\n          <div className=\"col-lg-6\">\n            <div class=\"console-area dropshadow\">\n              <div className=\"tab-container\">\n                <button \n                  className={\"tab dropshadow \" + ((this.state.panel === 'repl') ? 'active' : '')}\n                  onClick={this.changeToREPL}\n                  >REPL</button>\n                <button \n                  className={\"tab dropshadow \" + ((this.state.panel === 'repl') ? '' : 'active')}\n                  onClick={this.changeToOutput}\n                  >Output</button>\n              </div>\n              \n              { (this.state.panel === 'repl') ? \n                <REPL sendHandler={this.sendCommand} log={this.state.response}/> :\n                <OutputConsole output={this.state.output}/> }\n\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}